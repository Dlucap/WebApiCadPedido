// <auto-generated />
using System;
using CadPedido.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CadPedido.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20210830031101_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CadPedido.Business.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("CadPedido.Business.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasMaxLength(36)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("CadPedido.Business.Models.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasMaxLength(36)
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasMaxLength(36)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("pedidoItens");
                });

            modelBuilder.Entity("CadPedido.Business.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("CadPedido.Business.Models.Pedido", b =>
                {
                    b.HasOne("CadPedido.Business.Models.Cliente", "Cliente")
                        .WithOne("Pedido")
                        .HasForeignKey("CadPedido.Business.Models.Pedido", "ClienteId")
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CadPedido.Business.Models.PedidoItem", b =>
                {
                    b.HasOne("CadPedido.Business.Models.Pedido", "Pedido")
                        .WithMany("PedidoItem")
                        .HasForeignKey("PedidoId")
                        .IsRequired();

                    b.HasOne("CadPedido.Business.Models.Produto", "Produto")
                        .WithOne("PedidoItem")
                        .HasForeignKey("CadPedido.Business.Models.PedidoItem", "ProdutoId")
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CadPedido.Business.Models.Cliente", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("CadPedido.Business.Models.Pedido", b =>
                {
                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("CadPedido.Business.Models.Produto", b =>
                {
                    b.Navigation("PedidoItem");
                });
#pragma warning restore 612, 618
        }
    }
}
